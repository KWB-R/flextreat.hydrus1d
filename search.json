[{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_no-irrigation.html","id":"install-r-package","dir":"Articles","previous_headings":"","what":"Install R Package","title":"Modelling with R: No Irrigation (2017-05-01 - 2020-10-31)","text":"","code":"# Enable this universe options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org')) # Install R package install.packages('flextreat.hydrus1d')"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_no-irrigation.html","id":"define-paths","dir":"Articles","previous_headings":"","what":"Define Paths","title":"Modelling with R: No Irrigation (2017-05-01 - 2020-10-31)","text":"","code":"paths_list <- list(   extdata = system.file(\"extdata\", package = \"flextreat.hydrus1d\"),   exe_dir = \"<extdata>/model\",   model_name = \"test\",   model_dir = \"<exe_dir>/<model_name>\",   scenario = \"status-quo_no-irrigation\",   atmosphere = \"<model_dir>/ATMOSPH.IN\",   a_level = \"<model_dir>/A_LEVEL.out\",   t_level = \"<model_dir>/T_LEVEL.out\",   runinf = \"<model_dir>/Run_Inf.out\",   solute_id = 1,    solute = \"<model_dir>/solute<solute_id>.out\",   soil_data = \"<extdata>/input-data/soil/soil_geolog.csv\" )  paths <- kwb.utils::resolve(paths_list)"},{"path":[]},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_no-irrigation.html","id":"soil","dir":"Articles","previous_headings":"Input Data","what":"Soil","title":"Modelling with R: No Irrigation (2017-05-01 - 2020-10-31)","text":"Soil data derived depth-dependent grain-size analysis soil samples taken Braunschweig. following required input parameters van Genuchten model used HYDRUS1D derived using pedotransfer function ROSETTA-API version 3, developed Zhang Schaap, 2017. Due similar soil characteristics, two different layers (column layer_id) defined: - layer 1: ranging 0 cm - 55 cm depth - layer 2: ranging 55 cm - 210 cm depth spatially aggregation layer (geometric mean) input parameters van Genuchten model performed code shown subsequent table.","code":"library(flextreat.hydrus1d)  soil_dat <- readr::read_csv(paths$soil_data, show_col_types = FALSE) %>%    dplyr::mutate(layer_id = dplyr::if_else(.data$tiefe_cm_ende < 60,                                         1,                                         2),                 thickness_cm = .data$tiefe_cm_ende - .data$tiefe_cm_start,                 sand = .data$S_prozent + .data$G_prozent,                  silt = .data$U_prozent,                  clay = round(100 - .data$sand - .data$silt,                                      1)) %>%    dplyr::mutate(clay = dplyr::if_else(.data$clay < 0,                                       0,                                        .data$clay)) %>%    soilDB:::ROSETTA(vars = c(\"sand\", \"silt\", \"clay\"),                    v = \"3\") %>%    dplyr::mutate(alpha = 10^.data$alpha,                 npar = 10^.data$npar,                  ksat = 10^.data$ksat)   knitr::kable(soil_dat) soil_dat_per_layer <- soil_dat %>%    dplyr::group_by(.data$layer_id) %>%    dplyr::summarise(layer_thickness = max(.data$tiefe_cm_ende) - min(.data$tiefe_cm_start),                    theta_r = sum(.data$theta_r*.data$thickness_cm)/.data$layer_thickness,                    theta_s = sum(.data$theta_s*.data$thickness_cm)/.data$layer_thickness,                    alpha = sum(.data$alpha*.data$thickness_cm)/.data$layer_thickness,                    npar = sum(.data$npar*.data$thickness_cm)/.data$layer_thickness,                    ksat = sum(.data$ksat*.data$thickness_cm)/.data$layer_thickness)   knitr::kable(soil_dat_per_layer)"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_no-irrigation.html","id":"atmospheric-boundary-conditions","dir":"Articles","previous_headings":"Input Data","what":"Atmospheric Boundary Conditions","title":"Modelling with R: No Irrigation (2017-05-01 - 2020-10-31)","text":"total three different atmospheric input boundary conditions (precipitation, potential evaporation irrigation) used within HYDRUS1D model described following subchapters detail.","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_no-irrigation.html","id":"rainfall","dir":"Articles","previous_headings":"Input Data > Atmospheric Boundary Conditions","what":"Rainfall","title":"Modelling with R: No Irrigation (2017-05-01 - 2020-10-31)","text":"Rainfall based historical hourly raw data downloaded DWD open-data ftp server station_id = 662 (.e. Braunschweig). Data aggregated within R daily sums using code :","code":"install.packages(\"rdwd\") library(dplyr) rdwd::updateRdwd()  rdwd::findID(\"Braunschweig\") rdwd::selectDWD(name = \"Braunschweig\", res = \"daily\")  url_bs_rain <- rdwd::selectDWD(name = \"Braunschweig\",                                res = \"hourly\",                                var = \"precipitation\",                                per = \"historical\" )  bs_rain <- rdwd::dataDWD(url_bs_rain)  precipitation_hourly <- rdwd::dataDWD(url_bs_rain) %>%   dplyr::select(.data$MESS_DATUM, .data$R1) %>%   dplyr::rename(\"datetime\" = \"MESS_DATUM\",                 \"precipitation_mm\" = \"R1\")  usethis::use_data(precipitation_hourly)   precipitation_daily <- precipitation_hourly %>%   dplyr::mutate(\"date\" = as.Date(datetime)) %>%   dplyr::group_by(date) %>%   dplyr::summarise(rain_mm = sum(precipitation_mm))  usethis::use_data(precipitation_daily) DT::datatable(head(flextreat.hydrus1d::precipitation_daily))"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_no-irrigation.html","id":"potential-evaporation","dir":"Articles","previous_headings":"Input Data > Atmospheric Boundary Conditions","what":"Potential Evaporation","title":"Modelling with R: No Irrigation (2017-05-01 - 2020-10-31)","text":"based daily potential evaporation grids (1km x 1km) downloaded DWD open-data server, grids (.e. 46) within Abwasserverregnungsgebiet.shp selected spatially aggregated (mean, sd, min, max) using code :","code":"shape_file <- system.file(\"extdata/input-data/gis/Abwasserverregnungsgebiet.shp\",                           package = \"flextreat.hydrus1d\")  # Only data of full months can currently be read! evapo_p <- kwb.dwd::read_daily_data_over_shape(   file = shape_file,   variable = \"evapo_p\",   from = \"201701\",   to = \"202012\" )  usethis::use_data(evapo_p) DT::datatable(head(flextreat.hydrus1d::evapo_p))"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_no-irrigation.html","id":"irrigation","dir":"Articles","previous_headings":"Input Data > Atmospheric Boundary Conditions","what":"Irrigation","title":"Modelling with R: No Irrigation (2017-05-01 - 2020-10-31)","text":"Monthly irrigation volumes provided Abwasserverband Braunschweig time period 2017-01-01 - 2020-12-31 csv file separates two sources (groundwater clearwater). Data preparation carried code :","code":"irrigation_file <- system.file(\"extdata/input-data/Beregnungsmengen_AVB.csv\",                           package = \"flextreat.hydrus1d\")   irrigation_area <- rgdal::readOGR(dsn = shape_file)   irrigation <- read.csv2(irrigation_file) %>%   dplyr::select(- .data$Monat) %>%   dplyr::rename(irrigation_m3 = .data$Menge_m3,                 source = .data$Typ,                 month = .data$Monat_num,                 year = .data$Jahr) %>%   dplyr::mutate(date_start = as.Date(sprintf(\"%d-%02d-01\",                                .data$year,                                .data$month)),                 days_in_month = as.numeric(lubridate::days_in_month(.data$date_start)),                 date_end =  as.Date(sprintf(\"%d-%02d-%02d\",                                             .data$year,                                             .data$month,                                             .data$days_in_month)),                 source = kwb.utils::multiSubstitute(.data$source,                                                     replacements = list(\"Grundwasser\" = \"groundwater.mmPerDay\",                                                                         \"Klarwasser\" = \"clearwater.mmPerDay\")),                 irrigation_cbmPerDay = .data$irrigation_m3/.data$days_in_month,                 irrigation_area_sqm = irrigation_area$area,                 irrigation_mmPerDay = 1000*irrigation_cbmPerDay/irrigation_area_sqm) %>%   dplyr::select(.data$year,                 .data$month,                 .data$days_in_month,                 .data$date_start,                 .data$date_end,                 .data$source,                 .data$irrigation_mmPerDay,                 .data$irrigation_area_sqm) %>%   tidyr::pivot_wider(names_from = .data$source,                      values_from = .data$irrigation_mmPerDay)   usethis::use_data(irrigation) DT::datatable(head(flextreat.hydrus1d::irrigation))"},{"path":[]},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_no-irrigation.html","id":"modify-input-files","dir":"Articles","previous_headings":"HYDRUS-1D","what":"Modify Input Files","title":"Modelling with R: No Irrigation (2017-05-01 - 2020-10-31)","text":"model input files initially setup using HYDRUS1D-GUI following modified manually ","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_no-irrigation.html","id":"selector-in","dir":"Articles","previous_headings":"HYDRUS-1D > Modify Input Files","what":"SELECTOR.in","title":"Modelling with R: No Irrigation (2017-05-01 - 2020-10-31)","text":"Soil input data entered manually SELECTOR.two layers defined second table Chapter: Input Data - Soil.","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_no-irrigation.html","id":"atmosphere-in","dir":"Articles","previous_headings":"HYDRUS-1D > Modify Input Files","what":"ATMOSPHERE.in","title":"Modelling with R: No Irrigation (2017-05-01 - 2020-10-31)","text":"Based atmospheric input data (see Chapter: Atmospheric Boundary Conditions) ATMOSPHERE.file HYDRUS1D prepared code starts hydrological summer half year (assumption: soil fully wetted end winter half year): selected time period covers 1279 days (2017-05-01 - 2020-10-31), .e. covers 7 hydrological half years. time-series converted function flextreat.hydrus1d::prepare_atmosphere() data format required HYDRUS1D. Due fact, irrigation rates (.e. sum clearwater.mmPerDay groundwater.mmPerDay) entered separately input column within HYDRUS1D, simply added th prec (.e. precipitation) column. whole time series defined ATMOSPHERE.shown :","code":"atm <- flextreat.hydrus1d::prepare_atmosphere_data() ### Set irrigation to 0 mm/day  atm$groundwater.mmPerDay <- 0  atm$clearwater.mmPerDay <- 0  atm_selected <- flextreat.hydrus1d::select_hydrologic_years(atm)  atm_selected_hydro_wide <- flextreat.hydrus1d::aggregate_atmosphere(atm_selected, \"wide\")  DT::datatable(atm_selected_hydro_wide) kwb.utils::preparePdf(pdfFile = sprintf(\"boundaries-temporal_%s.pdf\",                                          paths$scenario),                                          width.cm = 18, height.cm = 10) #> [1] \"boundaries-temporal_status-quo_no-irrigation.pdf\" atm_hydro_plot dev.off() #> agg_png  #>       2  atm_prep <- flextreat.hydrus1d::prepare_atmosphere(   atm_selected,    conc_irrig_clearwater = 0, # use as \"clearwater\" tracer    conc_irrig_groundwater = 0,    conc_rain = 1)  atmos <- kwb.hydrus1d::write_atmosphere(   atm = atm_prep,   MaxAL = nrow(atm_prep),   round_digits = 6 # increase precision for \"clearwater\" tracer!   )  writeLines(atmos, paths$atmosphere) DT::datatable(atm_selected) DT::datatable(atm_prep)"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_no-irrigation.html","id":"run-model","dir":"Articles","previous_headings":"HYDRUS-1D","what":"Run Model","title":"Modelling with R: No Irrigation (2017-05-01 - 2020-10-31)","text":"Finally model run automatically using following code:","code":"exe_path <- kwb.hydrus1d::check_hydrus_exe(dir = paths$exe_dir,                                            skip_preinstalled = TRUE) #> Checking if download of HYDRUS1D executable v4.17.0140 from 'https://github.com/mrustl/hydrus1d/archive/refs/tags/v4.17.0140.zip' was successful ... ok. (0.00s) kwb.hydrus1d:::run_model(exe_path = exe_path,                          model_path = paths$model_dir) #> Warning in shell(cmd = sprintf(\"cd %s && %s\", fs::path_abs(target_dir), : 'cd #> D:/a/_temp/Library/flextreat.hydrus1d/extdata/model && H1D_CALC.exe' execution #> failed with error code 24"},{"path":[]},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_no-irrigation.html","id":"numerical-solution","dir":"Articles","previous_headings":"HYDRUS-1D > Read Results","what":"Numerical Solution","title":"Modelling with R: No Irrigation (2017-05-01 - 2020-10-31)","text":"","code":"runinf <- kwb.hydrus1d::read_runinf(paths$runinf)  summary(runinf) #>     t_level           time               dt               itr_w        #>  Min.   :    1   Min.   :   0.05   Min.   :0.001988   Min.   : 2.000   #>  1st Qu.: 6314   1st Qu.: 268.07   1st Qu.:0.020391   1st Qu.: 2.000   #>  Median :12626   Median : 641.45   Median :0.040333   Median : 2.000   #>  Mean   :12626   Mean   : 617.99   Mean   :0.050649   Mean   : 2.471   #>  3rd Qu.:18939   3rd Qu.: 946.18   3rd Qu.:0.093039   3rd Qu.: 2.000   #>  Max.   :25252   Max.   :1279.00   Max.   :0.100000   Max.   :20.000   #>      itr_c       it_cum          kod_t            kod_b    converg        #>  Min.   :1   Min.   :    4   Min.   :-4.000   Min.   :-5   Mode:logical   #>  1st Qu.:1   1st Qu.:21479   1st Qu.:-4.000   1st Qu.:-5   TRUE:25252     #>  Median :1   Median :40877   Median : 4.000   Median :-5                  #>  Mean   :1   Mean   :41563   Mean   : 0.767   Mean   :-5                  #>  3rd Qu.:1   3rd Qu.:61967   3rd Qu.: 4.000   3rd Qu.:-5                  #>  Max.   :1   Max.   :82307   Max.   : 4.000   Max.   :-5                  #>      peclet       courant        #>  Min.   :0.1   Min.   :0.00100   #>  1st Qu.:0.1   1st Qu.:0.01200   #>  Median :0.1   Median :0.02800   #>  Mean   :0.1   Mean   :0.06925   #>  3rd Qu.:0.1   3rd Qu.:0.08900   #>  Max.   :0.1   Max.   :0.99600"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_no-irrigation.html","id":"conservative-tracer","dir":"Articles","previous_headings":"HYDRUS-1D > Read Results","what":"Conservative Tracer","title":"Modelling with R: No Irrigation (2017-05-01 - 2020-10-31)","text":"","code":"solute <- kwb.hydrus1d::read_solute(paths$solute)   solute_date <- flextreat.hydrus1d::aggregate_solute(solute,                                                      col_aggr = \"date\")  solute_yearmonth <- flextreat.hydrus1d::aggregate_solute(solute,                                                           col_aggr = \"yearmonth\") solute_year_hydrologic <- flextreat.hydrus1d::aggregate_solute(solute,                                                                col_aggr = \"year_hydrologic\") %>%   dplyr::filter(.data$diff_time >= 364) ### filter out as only may-october  DT::datatable(solute_year_hydrologic) solute_date_plot <- flextreat.hydrus1d::plot_solute(solute_date) solute_yearmonth_plot <- flextreat.hydrus1d::plot_solute(solute_yearmonth)  solute_date_plot solute_yearmonth_plot kwb.utils::preparePdf(pdfFile = sprintf(\"solute_yearmonth_%s.pdf\",                                          paths$scenario),                       width.cm = 22,                        height.cm = 10) #> [1] \"solute_yearmonth_status-quo_no-irrigation.pdf\" solute_yearmonth_plot dev.off() #> agg_png  #>       2 t_level <- kwb.hydrus1d::read_tlevel(paths$t_level) t_level #> # A tibble: 25,252 × 22 #>     time r_top r_root  v_top v_root    v_bot sum_r_top sum_r_r…¹ sum_v…² sum_v…³ #>  * <dbl> <dbl>  <dbl>  <dbl>  <dbl>    <dbl>     <dbl>     <dbl>   <dbl>   <dbl> #>  1 0.05  0.310      0 0.310       0 -0.00173    0.0155         0  0.0155       0 #>  2 0.1   0.310      0 0.310       0 -0.00173    0.0310         0  0.0310       0 #>  3 0.117 0.310      0 0.310       0 -0.00173    0.0362         0  0.0362       0 #>  4 0.135 0.310      0 0.225       0 -0.00173    0.0419         0  0.0403       0 #>  5 0.142 0.310      0 0.131       0 -0.00173    0.0440         0  0.0412       0 #>  6 0.149 0.310      0 0.106       0 -0.00173    0.0463         0  0.0420       0 #>  7 0.157 0.310      0 0.106       0 -0.00173    0.0488         0  0.0429       0 #>  8 0.166 0.310      0 0.0982      0 -0.00173    0.0516         0  0.0438       0 #>  9 0.176 0.310      0 0.0914      0 -0.00173    0.0546         0  0.0447       0 #> 10 0.187 0.310      0 0.0837      0 -0.00173    0.0580         0  0.0456       0 #> # … with 25,242 more rows, 12 more variables: sum_v_bot <dbl>, h_top <dbl>, #> #   h_root <dbl>, h_bot <dbl>, run_off <dbl>, sum_run_off <dbl>, volume <dbl>, #> #   sum_infil <dbl>, sum_evap <dbl>, t_level <dbl>, cum_w_trans <dbl>, #> #   snow_layer <dbl>, and abbreviated variable names ¹​sum_r_root, ²​sum_v_top, #> #   ³​sum_v_root  ## t_level aggregate tlevel_aggr_date <- flextreat.hydrus1d::aggregate_tlevel(t_level) tlevel_aggr_yearmonth <- flextreat.hydrus1d::aggregate_tlevel(t_level,                                                                col_aggr = \"yearmonth\") tlevel_aggr_year_hydrologic <- flextreat.hydrus1d::aggregate_tlevel(t_level,                                                                      col_aggr = \"year_hydrologic\") %>%    dplyr::filter(.data$diff_time >= 364) ### filter out as only may-october  DT::datatable(tlevel_aggr_year_hydrologic) wb_date_plot <- flextreat.hydrus1d::plot_waterbalance(tlevel_aggr_date) wb_yearmonth_plot <- flextreat.hydrus1d::plot_waterbalance(tlevel_aggr_yearmonth) wb_yearhydrologic_plot <- flextreat.hydrus1d::plot_waterbalance(tlevel_aggr_year_hydrologic)  wb_date_plot wb_yearmonth_plot wb_yearhydrologic_plot kwb.utils::preparePdf(pdfFile = sprintf(\"water-balance_yearmonth_%s.pdf\",                                          paths$scenario),                                          width.cm = 19, height.cm = 10) #> [1] \"water-balance_yearmonth_status-quo_no-irrigation.pdf\" wb_yearmonth_plot dev.off() #> agg_png  #>       2  saveRDS(wb_yearmonth_plot,          file = sprintf(\"wb_yearmonth_%s.Rds\", paths$scenario)) plotly::ggplotly(wb_date_plot) a_level <- kwb.hydrus1d::read_alevel(paths$a_level) a_level #> # A tibble: 1,279 × 10 #>     time sum_r_top sum_r…¹ sum_v…² sum_v…³ sum_v_…⁴   h_top h_root h_bot a_level #>  * <dbl>     <dbl>   <dbl>   <dbl>   <dbl>    <dbl>   <dbl>  <dbl> <dbl>   <dbl> #>  1     1    0.310        0  0.0699       0 -0.00173 -1   e5      0 -116.       1 #>  2     2   -0.0843       0 -0.325        0 -0.00346 -8.55e1      0 -116.       2 #>  3     3    0.156        0 -0.122        0 -0.00520 -1   e5      0 -116.       3 #>  4     4    0.0961       0 -0.182        0 -0.00693 -1.20e2      0 -116.       4 #>  5     5    0.166        0 -0.112        0 -0.00866 -2.02e3      0 -116.       5 #>  6     6    0.356        0 -0.0768       0 -0.0104  -1   e5      0 -116.       6 #>  7     7    0.640        0 -0.0598       0 -0.0121  -1   e5      0 -116.       7 #>  8     8    0.748        0 -0.0476       0 -0.0139  -1   e5      0 -116.       8 #>  9     9    0.988        0 -0.0385       0 -0.0156  -1   e5      0 -116.       9 #> 10    10    1.23         0 -0.0292       0 -0.0173  -1   e5      0 -116.      10 #> # … with 1,269 more rows, and abbreviated variable names ¹​sum_r_root, #> #   ²​sum_v_top, ³​sum_v_root, ⁴​sum_v_bot"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_python.html","id":"install-r-package","dir":"Articles","previous_headings":"","what":"Install R Package","title":"Modelling with Python","text":"","code":"# Enable this universe options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org' ))  # Install R package install.packages('flextreat.hydrus1d')"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_python.html","id":"install-phython-package-phydrus","dir":"Articles","previous_headings":"","what":"Install Phython Package phydrus","title":"Modelling with Python","text":"","code":"is_windows <- Sys.info()[1] == \"Windows\"  library(flextreat.hydrus1d)  ### Compile Hydrus1D v4.08 for windows  ### based on: https://github.com/phydrus/source_code/tree/main/source  if (is_windows) {   exe_path <- flextreat.hydrus1d::create_hydrus_exe()   writeLines(exe_path, \"exe_path.txt\") }  env <- \"flextreat\"  kwb.python::conda_py_install(   env_name = env,    pkgs = list(     conda = c(\"python=3.9\", \"openpyxl\"),     py = \"https://github.com/phydrus/phydrus/zipball/dev/79823e797662b9838dda13888e3ead962c6699d0\"   ) )  reticulate::use_miniconda(condaenv = env, required = TRUE)  tdir <- tempdir() fs::dir_create(tdir) env_yml <- kwb.python::conda_export(condaenv = env, export_dir = tdir) file.copy(env_yml, basename(env_yml), overwrite = TRUE)  # For reproducing the Python environment used for the `Hydrus1D` modelling you can  # check the `env_yml` file. Keep in mind that `phydrus` was developed # for the last open-source release (`hydrus v4.0.8`) and is not compatible with the  # latest `hydrus v4.17.0140`  # (see: https://github.com/phydrus/source_code/issues/1#issuecomment-1034675697).  env_yml  data(atmosphere)  write.csv(atmosphere, file = \"atmosphere.csv\", row.names = FALSE) # Import the necessary modules import os  import numpy as np import pandas as pd  import matplotlib as mpl import matplotlib.pyplot as plt  import phydrus as ps  ############################################################################### # 0 General Model Settings ############################################################################### exe_path = open(\"exe_path.txt\").read().splitlines() exe_path = ''.join(exe_path) exe_path  ml = ps.model.Model(   exe_name = exe_path,   ws_name = \"test\",   name = \"Test\",   description = \"Test for FlexTreat\",   length_unit = \"cm\",   time_unit = \"days\",   mass_units = \"mmol\",   print_screen = True )    ml.add_time_info(   tinit = 0, # Initial time of the simulation [T].   tmax = 2, # Final time of the simulation [T].   print_times = True     # Set to True. if information of pressure head, water contents,     # temperatures, and concentrations in observation nodes, and     # the water and solute fluxes is to be printed at a constant     # time interval of 1 time unit. )      ml.add_waterflow(   top_bc = 3, #Upper Boundary Condition:     #0 = Constant Pressure Head.     #1 = Constant Flux.     #2 = Atmospheric Boundary Condition with Surface Layer.     #3 = Atmospheric Boundary Condition with Surface Run Off.     #4 = Variable Pressure Head.     #5 = Variable Pressure Head/Flux.   bot_bc = 4 #Lower Boundary Condition:     #0 = Constant Pressure Head.     #1 = Constant Flux.     #2 = Variable Pressure Head.     #3 = Variable Flux.     #4 = Free Drainage.     #5 = Deep Drainage.     #6 = Seepage Face.     #7 = Horizontal Drains.   )  ## Add the process solute transport # ml.add_solute_transport( #   lupw = True #   )  # Add materials m = ml.get_empty_material_df(n=2)  m.loc[0:2] = [   [0.0449, 0.3833, 0.0385, 3.2783, 619.18, 0.5],   [0.04985, 0.377475, 0.03485, 3.8696, 1188.05, 0.5] ]  ml.add_material(m)  profile = ps.create_profile(   top = 0, # float, optional     # Top of the soil column.   bot = [-60, -200], # float or list of float, optional     # Bottom of the soil column. If a list is provided, multiple layers are     # created and other arguments need to be of the same length (e.g. mat).   dx = 1, # float, optional     # Size of each grid cell   h = -500, # float, optional     # Initial values of the pressure head.   lay = [1,2], # int or list of int, optional     # Subregion number (for mass balance calculations).   mat = [1,2], # int or list of int, optional     # Material number (for heterogeneity).   conc = 1e-10 # float, option )  ml.add_profile(profile)  ml.add_obs_nodes(   depths = [-30, -60, -90, -120, -160, -200] # list of ints     # List of floats denoting the depth of the nodes. The depth is     # defined in the same length unit as selected in ml.model function.     # The function defines the closest node to the desired depth. )  # sol = ml.get_empty_solute_df() # sol.loc[:, \"beta\"] = 1.0 # ml.add_solute( #   data = sol, #   difw = 1e-9, #float, optional #     #Ionic or molecular diffusion coefficient in free water, Dw [L2T-1]. #   difg = 0 #float, optional #     #Ionic or molecular diffusion coefficient in gas phase, Dg [L2T-1] #   )  atm = pd.read_csv(\"atmosphere.csv\", index_col=0) atm[\"cBot\"] = 0.0 atm[\"cTop\"] = 0.0 atm.loc[1, \"cTop\"] = 1.0 atm[0:2]  ml.add_atmospheric_bc(   atmosphere = atm[0:2], #pandas.DataFrame     #Pandas DataFrame with at least the following columns: tAtm,     #Prec, rSoil, rRoot, hCritA, rB, hB, hT, tTop, tBot, and Ampl.   ldailyvar = False, #bool, optional     #True if HYDRUS-1D is to generate daily variations in evaporation     #and transpiration. False otherwise.   lsinusvar = False, #bool, optional     #True if HYDRUS-1D is to generate sinusoidal variations in     #precipitation. False otherwise.   llai = False, # bool, optional     # Boolean indicating that potential evapotranspiration is     # to be divided into potential evaporation and potential     # transpiration using eq. (2.75) of the manual.   rextinct = 0.463, # float, optional     # A constant for the radiation extinction by the canopy     # (rExtinct=0.463) [-]. only used when lLai is True.   hcrits = 0, # float, optional     # Maximum allowed pressure head at the soil surface [L]. Default is     # 1e+30.   tatm = 0, # float, optional     # Time for which the i-th data record is provided [T].   hcrita = 100000.0, # float, optional     # Absolute value of the minimum allowed pressure head at the soil     # surface [L].   rb = 0, # float, optional     # Bottom flux [LT-1] (set equal to 0 if KodBot is positive, or if     # one of the logical variables qGWLF, FreeD or SeepF is .true.).   hb = 0, # float, optional     # Groundwater level [L], or any other prescribed pressure head     # boundary condition as indicated by a positive value of KodBot     # (set equal to 0 if KodBot is negative, or if one of the logical     # variables qGWLF, FreeD or SeepF is .true.).   ht = 0, # float, optional     # Prescribed pressure head [L] at the surface (set equal to 0 if     # KodBot is negative).   ttop = 0, # float, optional     # Soil surface temperature [oC] (omit if both lTemp and lChem are     # equal to .false.).    tbot = 0, # float, optional     # Soil temperature at the bottom of the soil profile [oC] (omit if     # both lTemp and lChem are equal to .false., set equal to zero if     # kBotT=0).   ampl = 0 # float, optional     # Temperature amplitude at the soil surface [K] (omit if both lTemp     # and lChem are equal to .false.). )  # Write the input and check if the model simulates ml.write_input() from datetime import datetime  start_time = datetime.now()  # Run simulation ml.simulate()  end_time = datetime.now()  print('Duration: {}'.format(end_time - start_time))"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_r.html","id":"install-r-package","dir":"Articles","previous_headings":"","what":"Install R Package","title":"Modelling with R: Status Quo (2017-05-01 - 2020-10-31)","text":"","code":"# Enable this universe options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org')) # Install R package install.packages('flextreat.hydrus1d')"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_r.html","id":"define-paths","dir":"Articles","previous_headings":"","what":"Define Paths","title":"Modelling with R: Status Quo (2017-05-01 - 2020-10-31)","text":"","code":"paths_list <- list(   extdata = system.file(\"extdata\", package = \"flextreat.hydrus1d\"),   exe_dir = \"<extdata>/model\",   scenario = \"status-quo\",   model_name = \"test\",   model_dir = \"<exe_dir>/<model_name>\",   atmosphere = \"<model_dir>/ATMOSPH.IN\",   a_level = \"<model_dir>/A_LEVEL.out\",   t_level = \"<model_dir>/T_LEVEL.out\",   runinf = \"<model_dir>/Run_Inf.out\",   solute_id = 1,    solute = \"<model_dir>/solute<solute_id>.out\",   soil_data = \"<extdata>/input-data/soil/soil_geolog.csv\" )  paths <- kwb.utils::resolve(paths_list)"},{"path":[]},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_r.html","id":"soil","dir":"Articles","previous_headings":"Input Data","what":"Soil","title":"Modelling with R: Status Quo (2017-05-01 - 2020-10-31)","text":"Soil data derived depth-dependent grain-size analysis soil samples taken Braunschweig. following required input parameters van Genuchten model used HYDRUS1D derived using pedotransfer function ROSETTA-API version 3, developed Zhang Schaap, 2017. Due similar soil characteristics, two different layers (column layer_id) defined: - layer 1: ranging 0 cm - 55 cm depth - layer 2: ranging 55 cm - 210 cm depth spatially aggregation layer (geometric mean) input parameters van Genuchten model performed code shown subsequent table.","code":"library(flextreat.hydrus1d)  soil_dat <- readr::read_csv(paths$soil_data, show_col_types = FALSE) %>%    dplyr::mutate(layer_id = dplyr::if_else(.data$tiefe_cm_ende < 60,                                         1,                                         2),                 thickness_cm = .data$tiefe_cm_ende - .data$tiefe_cm_start,                 sand = .data$S_prozent + .data$G_prozent,                  silt = .data$U_prozent,                  clay = round(100 - .data$sand - .data$silt,                                      1)) %>%    dplyr::mutate(clay = dplyr::if_else(.data$clay < 0,                                       0,                                        .data$clay)) %>%    soilDB:::ROSETTA(vars = c(\"sand\", \"silt\", \"clay\"),                    v = \"3\") %>%    dplyr::mutate(alpha = 10^.data$alpha,                 npar = 10^.data$npar,                  ksat = 10^.data$ksat)   knitr::kable(soil_dat) soil_dat_per_layer <- soil_dat %>%    dplyr::group_by(.data$layer_id) %>%    dplyr::summarise(layer_thickness = max(.data$tiefe_cm_ende) - min(.data$tiefe_cm_start),                    theta_r = sum(.data$theta_r*.data$thickness_cm)/.data$layer_thickness,                    theta_s = sum(.data$theta_s*.data$thickness_cm)/.data$layer_thickness,                    alpha = sum(.data$alpha*.data$thickness_cm)/.data$layer_thickness,                    npar = sum(.data$npar*.data$thickness_cm)/.data$layer_thickness,                    ksat = sum(.data$ksat*.data$thickness_cm)/.data$layer_thickness)   knitr::kable(soil_dat_per_layer)"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_r.html","id":"atmospheric-boundary-conditions","dir":"Articles","previous_headings":"Input Data","what":"Atmospheric Boundary Conditions","title":"Modelling with R: Status Quo (2017-05-01 - 2020-10-31)","text":"total three different atmospheric input boundary conditions (precipitation, potential evaporation irrigation) used within HYDRUS1D model described following subchapters detail.","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_r.html","id":"rainfall","dir":"Articles","previous_headings":"Input Data > Atmospheric Boundary Conditions","what":"Rainfall","title":"Modelling with R: Status Quo (2017-05-01 - 2020-10-31)","text":"Rainfall based historical hourly raw data downloaded DWD open-data ftp server station_id = 662 (.e. Braunschweig). Data aggregated within R daily sums using code :","code":"install.packages(\"rdwd\") library(dplyr) rdwd::updateRdwd()  rdwd::findID(\"Braunschweig\") rdwd::selectDWD(name = \"Braunschweig\", res = \"daily\")  url_bs_rain <- rdwd::selectDWD(name = \"Braunschweig\",                                res = \"hourly\",                                var = \"precipitation\",                                per = \"historical\" )  bs_rain <- rdwd::dataDWD(url_bs_rain)  precipitation_hourly <- rdwd::dataDWD(url_bs_rain) %>%   dplyr::select(.data$MESS_DATUM, .data$R1) %>%   dplyr::rename(\"datetime\" = \"MESS_DATUM\",                 \"precipitation_mm\" = \"R1\")  usethis::use_data(precipitation_hourly)   precipitation_daily <- precipitation_hourly %>%   dplyr::mutate(\"date\" = as.Date(datetime)) %>%   dplyr::group_by(date) %>%   dplyr::summarise(rain_mm = sum(precipitation_mm))  usethis::use_data(precipitation_daily) DT::datatable(head(flextreat.hydrus1d::precipitation_daily))"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_r.html","id":"potential-evaporation","dir":"Articles","previous_headings":"Input Data > Atmospheric Boundary Conditions","what":"Potential Evaporation","title":"Modelling with R: Status Quo (2017-05-01 - 2020-10-31)","text":"based daily potential evaporation grids (1km x 1km) downloaded DWD open-data server, grids (.e. 46) within Abwasserverregnungsgebiet.shp selected spatially aggregated (mean, sd, min, max) using code :","code":"shape_file <- system.file(\"extdata/input-data/gis/Abwasserverregnungsgebiet.shp\",                           package = \"flextreat.hydrus1d\")  # Only data of full months can currently be read! evapo_p <- kwb.dwd::read_daily_data_over_shape(   file = shape_file,   variable = \"evapo_p\",   from = \"201701\",   to = \"202012\" )  usethis::use_data(evapo_p) DT::datatable(head(flextreat.hydrus1d::evapo_p))"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_r.html","id":"irrigation","dir":"Articles","previous_headings":"Input Data > Atmospheric Boundary Conditions","what":"Irrigation","title":"Modelling with R: Status Quo (2017-05-01 - 2020-10-31)","text":"Monthly irrigation volumes provided Abwasserverband Braunschweig time period 2017-01-01 - 2020-12-31 csv file separates two sources (groundwater clearwater). Data preparation carried code :","code":"irrigation_file <- system.file(\"extdata/input-data/Beregnungsmengen_AVB.csv\",                           package = \"flextreat.hydrus1d\")   irrigation_area <- rgdal::readOGR(dsn = shape_file)   irrigation <- read.csv2(irrigation_file) %>%   dplyr::select(- .data$Monat) %>%   dplyr::rename(irrigation_m3 = .data$Menge_m3,                 source = .data$Typ,                 month = .data$Monat_num,                 year = .data$Jahr) %>%   dplyr::mutate(date_start = as.Date(sprintf(\"%d-%02d-01\",                                .data$year,                                .data$month)),                 days_in_month = as.numeric(lubridate::days_in_month(.data$date_start)),                 date_end =  as.Date(sprintf(\"%d-%02d-%02d\",                                             .data$year,                                             .data$month,                                             .data$days_in_month)),                 source = kwb.utils::multiSubstitute(.data$source,                                                     replacements = list(\"Grundwasser\" = \"groundwater.mmPerDay\",                                                                         \"Klarwasser\" = \"clearwater.mmPerDay\")),                 irrigation_cbmPerDay = .data$irrigation_m3/.data$days_in_month,                 irrigation_area_sqm = irrigation_area$area,                 irrigation_mmPerDay = 1000*irrigation_cbmPerDay/irrigation_area_sqm) %>%   dplyr::select(.data$year,                 .data$month,                 .data$days_in_month,                 .data$date_start,                 .data$date_end,                 .data$source,                 .data$irrigation_mmPerDay,                 .data$irrigation_area_sqm) %>%   tidyr::pivot_wider(names_from = .data$source,                      values_from = .data$irrigation_mmPerDay)   usethis::use_data(irrigation) DT::datatable(head(flextreat.hydrus1d::irrigation))"},{"path":[]},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_r.html","id":"modify-input-files","dir":"Articles","previous_headings":"HYDRUS-1D","what":"Modify Input Files","title":"Modelling with R: Status Quo (2017-05-01 - 2020-10-31)","text":"model input files initially setup using HYDRUS1D-GUI following modified manually ","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_r.html","id":"selector-in","dir":"Articles","previous_headings":"HYDRUS-1D > Modify Input Files","what":"SELECTOR.in","title":"Modelling with R: Status Quo (2017-05-01 - 2020-10-31)","text":"Soil input data entered manually SELECTOR.two layers defined second table Chapter: Input Data - Soil.","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_r.html","id":"atmosphere-in","dir":"Articles","previous_headings":"HYDRUS-1D > Modify Input Files","what":"ATMOSPHERE.in","title":"Modelling with R: Status Quo (2017-05-01 - 2020-10-31)","text":"Based atmospheric input data (see Chapter: Atmospheric Boundary Conditions) ATMOSPHERE.file HYDRUS1D prepared code starts hydrological summer half year (assumption: soil fully wetted end winter half year): selected time period covers 1279 days (2017-05-01 - 2020-10-31), .e. covers 7 hydrological half years. time-series converted function flextreat.hydrus1d::prepare_atmosphere() data format required HYDRUS1D. Due fact, irrigation rates (.e. sum clearwater.mmPerDay groundwater.mmPerDay) entered separately input column within HYDRUS1D, simply added th prec (.e. precipitation) column. whole time series defined ATMOSPHERE.shown :","code":"atm <- flextreat.hydrus1d::prepare_atmosphere_data() atm_selected <- flextreat.hydrus1d::select_hydrologic_years(atm)  atm_selected_hydro_wide <- flextreat.hydrus1d::aggregate_atmosphere(atm_selected, \"wide\")  DT::datatable(atm_selected_hydro_wide) kwb.utils::preparePdf(pdfFile = sprintf(\"boundaries-temporal_%s.pdf\",                                          paths$scenario),                                          width.cm = 18, height.cm = 10) #> [1] \"boundaries-temporal_status-quo.pdf\" atm_hydro_plot dev.off() #> agg_png  #>       2   atm_prep <- flextreat.hydrus1d::prepare_atmosphere(   atm_selected,    conc_irrig_clearwater = 1, # use as \"clearwater\" tracer    conc_irrig_groundwater = 0,    conc_rain = 0)  atmos <- kwb.hydrus1d::write_atmosphere(   atm = atm_prep,   MaxAL = nrow(atm_prep),   round_digits = 6 # increase precision for \"clearwater\" tracer!   )  writeLines(atmos, paths$atmosphere) DT::datatable(atm_selected) DT::datatable(atm_prep)"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_r.html","id":"run-model","dir":"Articles","previous_headings":"HYDRUS-1D","what":"Run Model","title":"Modelling with R: Status Quo (2017-05-01 - 2020-10-31)","text":"Finally model run automatically using following code:","code":"exe_path <- kwb.hydrus1d::check_hydrus_exe(dir = paths$exe_dir,                                            skip_preinstalled = TRUE) #> Checking if download of HYDRUS1D executable v4.17.0140 from 'https://github.com/mrustl/hydrus1d/archive/refs/tags/v4.17.0140.zip' was successful ... ok. (0.00s) kwb.hydrus1d:::run_model(exe_path = exe_path,                          model_path = paths$model_dir) #> Warning in shell(cmd = sprintf(\"cd %s && %s\", fs::path_abs(target_dir), : 'cd #> D:/a/_temp/Library/flextreat.hydrus1d/extdata/model && H1D_CALC.exe' execution #> failed with error code 24"},{"path":[]},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_r.html","id":"numerical-solution","dir":"Articles","previous_headings":"HYDRUS-1D > Read Results","what":"Numerical Solution","title":"Modelling with R: Status Quo (2017-05-01 - 2020-10-31)","text":"","code":"runinf <- kwb.hydrus1d::read_runinf(paths$runinf)  summary(runinf) #>     t_level           time               dt                itr_w        #>  Min.   :    1   Min.   :   0.05   Min.   :0.0001065   Min.   : 2.000   #>  1st Qu.: 5954   1st Qu.: 285.35   1st Qu.:0.0220900   1st Qu.: 2.000   #>  Median :11908   Median : 649.70   Median :0.0495000   Median : 2.000   #>  Mean   :11908   Mean   : 624.94   Mean   :0.0537056   Mean   : 2.483   #>  3rd Qu.:17862   3rd Qu.: 957.35   3rd Qu.:0.0944970   3rd Qu.: 2.000   #>  Max.   :23815   Max.   :1279.00   Max.   :0.1000000   Max.   :20.000   #>      itr_c       it_cum          kod_t               kod_b    converg        #>  Min.   :1   Min.   :    4   Min.   :-4.000000   Min.   :-5   Mode:logical   #>  1st Qu.:1   1st Qu.:19307   1st Qu.:-4.000000   1st Qu.:-5   TRUE:23815     #>  Median :1   Median :36910   Median : 4.000000   Median :-5                  #>  Mean   :1   Mean   :37823   Mean   : 0.004199   Mean   :-5                  #>  3rd Qu.:1   3rd Qu.:56331   3rd Qu.: 4.000000   3rd Qu.:-5                  #>  Max.   :1   Max.   :75157   Max.   : 4.000000   Max.   :-5                  #>      peclet       courant       #>  Min.   :0.1   Min.   :0.0000   #>  1st Qu.:0.1   1st Qu.:0.0150   #>  Median :0.1   Median :0.0400   #>  Mean   :0.1   Mean   :0.0829   #>  3rd Qu.:0.1   3rd Qu.:0.1170   #>  Max.   :0.1   Max.   :0.9960"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/articles/modelling_r.html","id":"conservative-tracer","dir":"Articles","previous_headings":"HYDRUS-1D > Read Results","what":"Conservative Tracer","title":"Modelling with R: Status Quo (2017-05-01 - 2020-10-31)","text":"","code":"solute <- kwb.hydrus1d::read_solute(paths$solute)   solute_date <- flextreat.hydrus1d::aggregate_solute(solute,                                                      col_aggr = \"date\")  solute_yearmonth <- flextreat.hydrus1d::aggregate_solute(solute,                                                           col_aggr = \"yearmonth\") solute_year_hydrologic <- flextreat.hydrus1d::aggregate_solute(solute,                                                                col_aggr = \"year_hydrologic\") %>%   dplyr::filter(.data$diff_time >= 364) ### filter out as only may-october  DT::datatable(solute_year_hydrologic) solute_date_plot <- flextreat.hydrus1d::plot_solute(solute_date) solute_yearmonth_plot <- flextreat.hydrus1d::plot_solute(solute_yearmonth)  solute_date_plot solute_yearmonth_plot kwb.utils::preparePdf(pdfFile = sprintf(\"solute_yearmonth_%s.pdf\",                                          paths$scenario),                       width.cm = 22,                        height.cm = 10) #> [1] \"solute_yearmonth_status-quo.pdf\" solute_yearmonth_plot dev.off() #> agg_png  #>       2 t_level <- kwb.hydrus1d::read_tlevel(paths$t_level) t_level #> # A tibble: 23,815 × 22 #>     time r_top r_root  v_top v_root    v_bot sum_r_top sum_r_r…¹ sum_v…² sum_v…³ #>  * <dbl> <dbl>  <dbl>  <dbl>  <dbl>    <dbl>     <dbl>     <dbl>   <dbl>   <dbl> #>  1 0.05  0.246      0 0.246       0 -0.00173    0.0123         0  0.0123       0 #>  2 0.1   0.246      0 0.246       0 -0.00173    0.0246         0  0.0246       0 #>  3 0.15  0.246      0 0.246       0 -0.00173    0.0369         0  0.0369       0 #>  4 0.168 0.246      0 0.246       0 -0.00173    0.0414         0  0.0414       0 #>  5 0.188 0.246      0 0.0664      0 -0.00173    0.0464         0  0.0427       0 #>  6 0.203 0.246      0 0.0433      0 -0.00173    0.0498         0  0.0433       0 #>  7 0.218 0.246      0 0.0562      0 -0.00173    0.0536         0  0.0442       0 #>  8 0.235 0.246      0 0.0596      0 -0.00173    0.0578         0  0.0452       0 #>  9 0.254 0.246      0 0.0575      0 -0.00173    0.0625         0  0.0463       0 #> 10 0.275 0.246      0 0.0494      0 -0.00173    0.0675         0  0.0473       0 #> # … with 23,805 more rows, 12 more variables: sum_v_bot <dbl>, h_top <dbl>, #> #   h_root <dbl>, h_bot <dbl>, run_off <dbl>, sum_run_off <dbl>, volume <dbl>, #> #   sum_infil <dbl>, sum_evap <dbl>, t_level <dbl>, cum_w_trans <dbl>, #> #   snow_layer <dbl>, and abbreviated variable names ¹​sum_r_root, ²​sum_v_top, #> #   ³​sum_v_root  ## t_level aggregate tlevel_aggr_date <- flextreat.hydrus1d::aggregate_tlevel(t_level) tlevel_aggr_yearmonth <- flextreat.hydrus1d::aggregate_tlevel(t_level,                                                                col_aggr = \"yearmonth\") tlevel_aggr_year_hydrologic <- flextreat.hydrus1d::aggregate_tlevel(t_level,                                                                      col_aggr = \"year_hydrologic\") %>%    dplyr::filter(.data$diff_time >= 364) ### filter out as only may-october  DT::datatable(tlevel_aggr_year_hydrologic) wb_date_plot <- flextreat.hydrus1d::plot_waterbalance(tlevel_aggr_date) wb_yearmonth_plot <- flextreat.hydrus1d::plot_waterbalance(tlevel_aggr_yearmonth) wb_yearhydrologic_plot <- flextreat.hydrus1d::plot_waterbalance(tlevel_aggr_year_hydrologic)  wb_date_plot wb_yearmonth_plot wb_yearhydrologic_plot kwb.utils::preparePdf(pdfFile = sprintf(\"water-balance_yearmonth_%s.pdf\",                                          paths$scenario),                                          width.cm = 19, height.cm = 10) #> [1] \"water-balance_yearmonth_status-quo.pdf\" wb_yearmonth_plot dev.off() #> agg_png  #>       2  saveRDS(wb_yearmonth_plot,          file = sprintf(\"wb_yearmonth_%s.Rds\", paths$scenario)) plotly::ggplotly(wb_date_plot) a_level <- kwb.hydrus1d::read_alevel(paths$a_level) a_level #> # A tibble: 1,279 × 10 #>     time sum_r_top sum_r…¹ sum_v…² sum_v…³ sum_v_…⁴   h_top h_root h_bot a_level #>  * <dbl>     <dbl>   <dbl>   <dbl>   <dbl>    <dbl>   <dbl>  <dbl> <dbl>   <dbl> #>  1     1    0.246        0  0.0672       0 -0.00173 -1   e5      0 -116.       1 #>  2     2   -0.213        0 -0.392        0 -0.00346 -8.30e1      0 -116.       2 #>  3     3   -0.0375       0 -0.216        0 -0.00520 -1.67e3      0 -116.       3 #>  4     4   -0.162        0 -0.341        0 -0.00693 -1.03e2      0 -116.       4 #>  5     5   -0.157        0 -0.335        0 -0.00866 -1.23e2      0 -116.       5 #>  6     6   -0.0311       0 -0.221        0 -0.0104  -1   e5      0 -116.       6 #>  7     7    0.188        0 -0.187        0 -0.0121  -1   e5      0 -116.       7 #>  8     8    0.232        0 -0.167        0 -0.0139  -1   e5      0 -116.       8 #>  9     9    0.408        0 -0.151        0 -0.0156  -1   e5      0 -116.       9 #> 10    10    0.583        0 -0.139        0 -0.0173  -1   e5      0 -116.      10 #> # … with 1,269 more rows, and abbreviated variable names ¹​sum_r_root, #> #   ²​sum_v_top, ³​sum_v_root, ⁴​sum_v_bot"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Rustler. Author, maintainer. . Funder. . Copyright holder.","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rustler M (2022). flextreat.hydrus1d: R Package Soil Water Balance Solute Transport Modelling Scenarios Project Flextreat. R package version 0.0.0.9000, https://github.com/KWB-R/flextreat.hydrus1d.","code":"@Manual{,   title = {flextreat.hydrus1d: R Package for Soil Water Balance and Solute Transport Modelling Scenarios for Project Flextreat},   author = {Michael Rustler},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/KWB-R/flextreat.hydrus1d}, }"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Package for Soil Water Balance and Solute Transport Modelling\n    Scenarios for Project Flextreat","text":"details install KWB-R packages checkout installation tutorial.","code":"### Optionally: specify GitHub Personal Access Token (GITHUB_PAT) ### See here why this might be important for you: ### https://kwb-r.github.io/kwb.pkgbuild/articles/install.html#set-your-github_pat  # Sys.setenv(GITHUB_PAT = \"mysecret_access_token\")  # Install package \"remotes\" from CRAN if (! require(\"remotes\")) {   install.packages(\"remotes\", repos = \"https://cloud.r-project.org\") }  # Install KWB package 'flextreat.hydrus1d' from GitHub remotes::install_github(\"KWB-R/flextreat.hydrus1d\")"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/add_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: add times — add_times","title":"Helper function: add times — add_times","text":"Helper function: add times","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/add_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: add times — add_times","text":"","code":"add_times(df, sim_datetime_start = as.POSIXct(\"2017-05-01\", tz = \"UTC\"))"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/add_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: add times — add_times","text":"df df sim_datetime_start simulation start datetime object (default: .POSIXct(\"2017-05-01\", tz = \"UTC\"))","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/add_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: add times — add_times","text":"data frame added  times","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/aggregate_atmosphere.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Atmosphere — aggregate_atmosphere","title":"Aggregate Atmosphere — aggregate_atmosphere","text":"hydrologic years","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/aggregate_atmosphere.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Atmosphere — aggregate_atmosphere","text":"","code":"aggregate_atmosphere(atm_selected, format = \"wide\")"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/aggregate_atmosphere.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Atmosphere — aggregate_atmosphere","text":"atm_selected atm_selected format \"wide\" \"long","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/aggregate_atmosphere.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Atmosphere — aggregate_atmosphere","text":"aggregated data","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/aggregate_solute.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Solute — aggregate_solute","title":"Aggregate Solute — aggregate_solute","text":"Aggregate Solute","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/aggregate_solute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Solute — aggregate_solute","text":"","code":"aggregate_solute(   solute,   sim_datetime_start = as.POSIXct(\"2017-05-01\", tz = \"UTC\"),   col_aggr = \"date\" )"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/aggregate_solute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Solute — aggregate_solute","text":"solute solute sim_datetime_start simulation start datetime object (default: .POSIXct(\"2017-05-01\", tz = \"UTC\")) col_aggr column aggregated. One \"date\", \"yearmonth\", \"year\" \"year_hydrologic\" (default: \"date\")","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/aggregate_solute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Solute — aggregate_solute","text":"aggregated solute","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/aggregate_tlevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate t_level — aggregate_tlevel","title":"Aggregate t_level — aggregate_tlevel","text":"columns starting \"sum\" matching \"volume\"","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/aggregate_tlevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate t_level — aggregate_tlevel","text":"","code":"aggregate_tlevel(   t_level,   sim_datetime_start = as.POSIXct(\"2017-05-01\", tz = \"UTC\"),   col_aggr = \"date\" )"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/aggregate_tlevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate t_level — aggregate_tlevel","text":"t_level t_level sim_datetime_start simulation start datetime object (default: .POSIXct(\"2017-05-01\", tz = \"UTC\")) col_aggr column aggregated. One \"date\", \"yearmonth\", \"year\" \"year_hydrologic\" (default: \"date\")","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/aggregate_tlevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate t_level — aggregate_tlevel","text":"aggregated t_level data","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/atmosphere.html","id":null,"dir":"Reference","previous_headings":"","what":"Atmosphere — atmosphere","title":"Atmosphere — atmosphere","text":"dummy dataset containing minimum atmospheric data","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/atmosphere.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Atmosphere — atmosphere","text":"","code":"atmosphere"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/atmosphere.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Atmosphere — atmosphere","text":"data frame 12 rows 7 variables: tAtm Time -th data record provided (T) Prec Precipitation rate (LT-1) (absolute value) rSoil Potential evaporation rate (LT-1) (absolute value). rSoil() interpreted KodTop time variable Dirichlet Neumann boundary condition specified. rRoot Potential transpiration rate (LT-1) (absolute value). hCritA Absolute value minimum allowed pressure head soil surface (L).","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/atmosphere.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Atmosphere — atmosphere","text":"https://raw.githubusercontent.com/phydrus/phydrus/dev/examples/phydrus_paper/data/atmosphere.csv/","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/atmosphere.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Atmosphere — atmosphere","text":"","code":"head(atmosphere) #>   tAtm Prec      rSoil      rRoot hCritA #> 1    1 0.51 0.00000000 0.01464508 100000 #> 2    2 0.02 0.00000000 0.01842473 100000 #> 3    3 0.00 0.03394404 0.03132639 100000 #> 4    4 0.00 0.00000000 0.02748290 100000 #> 5    5 0.00 0.03357781 0.02251188 100000 #> 6    6 0.00 0.03713137 0.02779009 100000"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/create_hydrus_exe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Hydrus1D executable (only on Windows!) — create_hydrus_exe","title":"Create Hydrus1D executable (only on Windows!) — create_hydrus_exe","text":"Create Hydrus1D executable (Windows!)","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/create_hydrus_exe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Hydrus1D executable (only on Windows!) — create_hydrus_exe","text":"","code":"create_hydrus_exe()"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/create_hydrus_exe.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Create Hydrus1D executable (only on Windows!) — create_hydrus_exe","text":"https://github.com/phydrus/source_code/tree/main","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/create_hydrus_exe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Hydrus1D executable (only on Windows!) — create_hydrus_exe","text":"path Hydrus1D v4.0.8 executable","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/create_monthly_atm.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Atmospheric Data to Monthly Values — create_monthly_atm","title":"Aggregate Atmospheric Data to Monthly Values — create_monthly_atm","text":"Aggregate Atmospheric Data Monthly Values","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/create_monthly_atm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Atmospheric Data to Monthly Values — create_monthly_atm","text":"","code":"create_monthly_atm(atm = prepare_atmosphere_data())"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/create_monthly_atm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Atmospheric Data to Monthly Values — create_monthly_atm","text":"atm atm retrieved prepare_atmosphere_data","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/create_monthly_atm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Atmospheric Data to Monthly Values — create_monthly_atm","text":"tibble yearly atmospheric data values","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/create_monthly_atm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate Atmospheric Data to Monthly Values — create_monthly_atm","text":"","code":"create_monthly_atm() #> # A tibble: 48 × 5 #>    date_end   rain_mm irrigation_groundwater_mm irrigation_clearwater_mm poten…¹ #>    <date>       <dbl>                     <dbl>                    <dbl>   <dbl> #>  1 2017-01-31    42.4                   0                            0      8.11 #>  2 2017-02-28    31.7                   0                           17.0   17.3  #>  3 2017-03-31    46.6                   0                           19.2   49.0  #>  4 2017-04-30    24.4                   0                           18.4   60.6  #>  5 2017-05-31    98.1                   0.00145                     20.0  101.   #>  6 2017-06-30   114.                    0.0406                      27.3  115.   #>  7 2017-07-31   138.                    0.00234                     26.8  104.   #>  8 2017-08-31    90.4                   0                           25.2   86.1  #>  9 2017-09-30    52.7                   0                           22.8   44.3  #> 10 2017-10-31    46.1                   0                           21.9   30.1  #> # … with 38 more rows, and abbreviated variable name ¹​potential_evaporation_mm"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/evapo_p.html","id":null,"dir":"Reference","previous_headings":"","what":"DWD: Potential Evaporation, Daily — evapo_p","title":"DWD: Potential Evaporation, Daily — evapo_p","text":"Median daily potential evaporation irrigation area (.e. ~44km2), based 1x1km2 grids DWD. Downloaded read_daily_data_over_shape 2017-01-01 2020-12-31","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/evapo_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DWD: Potential Evaporation, Daily — evapo_p","text":"","code":"evapo_p"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/evapo_p.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DWD: Potential Evaporation, Daily — evapo_p","text":"data.frame 1461 rows 10 variables: file name downloaded grid file source date date year year month month day day mean spatially averaged, mean sd spatially averaged, standard deviation min spatially averaged, min max spatially averaged, max n_values number grid-cells used spatial averaging","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/evapo_p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DWD: Potential Evaporation, Daily — evapo_p","text":"","code":"if (FALSE) { ### Data download remotes::install_github(\"kwb-r/kwb.dwd\") shape_file <- system.file(\"extdata/input-data/gis/Abwasserverregnungsgebiet.shp\", package = \"flextreat.hydrus1d\")  # Only data of full months can currently be read! evapo_p <- kwb.dwd::read_daily_data_over_shape( file = shape_file, variable = \"evapo_p\", from = \"201701\", to = \"202012\" )} head(flextreat.hydrus1d::evapo_p) #>                                       file       date year month day mean sd #> 1 grids_germany_daily_evapo_p_20170101.asc 2017-01-01 2017     1   1  0.2  0 #> 2 grids_germany_daily_evapo_p_20170102.asc 2017-01-02 2017     1   2  0.2  0 #> 3 grids_germany_daily_evapo_p_20170103.asc 2017-01-03 2017     1   3  0.5  0 #> 4 grids_germany_daily_evapo_p_20170104.asc 2017-01-04 2017     1   4  1.1  0 #> 5 grids_germany_daily_evapo_p_20170105.asc 2017-01-05 2017     1   5  0.0  0 #> 6 grids_germany_daily_evapo_p_20170106.asc 2017-01-06 2017     1   6  0.0  0 #>   min max n_values #> 1 0.2 0.2       46 #> 2 0.2 0.2       46 #> 3 0.5 0.5       46 #> 4 1.1 1.1       46 #> 5 0.0 0.0       46 #> 6 0.0 0.0       46"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/get_hydrologic_years.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Hydrologic Years — get_hydrologic_years","title":"Get Hydrologic Years — get_hydrologic_years","text":"Get Hydrologic Years","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/get_hydrologic_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Hydrologic Years — get_hydrologic_years","text":"","code":"get_hydrologic_years(datetime)"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/get_hydrologic_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Hydrologic Years — get_hydrologic_years","text":"datetime datetime string","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/get_hydrologic_years.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Hydrologic Years — get_hydrologic_years","text":"integer vector hydrologic year","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/irrigation.html","id":null,"dir":"Reference","previous_headings":"","what":"Irrigation: Monthly — irrigation","title":"Irrigation: Monthly — irrigation","text":"Monthly irrigation values provided AVB (cubicmeters) downscaled daily values (dividing \"days_in_month\" normalised mm/squaremeter dividing assumed irrigation area (44111068 m2)","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/irrigation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Irrigation: Monthly — irrigation","text":"","code":"irrigation"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/irrigation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Irrigation: Monthly — irrigation","text":"data.frame 8835 rows 3 variables: year year month month days_in_month days month date_start date start date_end date end irrigation_area_sqm irrigation area squaremeter \"groundwater.mmPerDay irrigation using \"groundwater\" (mm/sqm) \"clearwater.mmPerDay irrigation using \"clearwater\" (mm/sqm)","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/irrigation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Irrigation: Monthly — irrigation","text":"","code":"if (FALSE) { install.packages(c(\"dplyr\", \"tidyr\")) irrigation_file <- system.file(\"extdata/input-data/Beregnungsmengen_AVB.csv\", package = \"flextreat.hydrus1d\")  irrigation_area <- rgdal::readOGR(dsn = shape_file)  irrigation <- read.csv2(irrigation_file) %>%   dplyr::select(- .data$Monat) %>%   dplyr::rename(irrigation_m3 = .data$Menge_m3,                 source = .data$Typ,                 month = .data$Monat_num,                 year = .data$Jahr) %>%   dplyr::mutate(date_start = as.Date(sprintf(\"%d-%02d-01\",                                              .data$year,                                              .data$month)),                 days_in_month = as.numeric(lubridate::days_in_month(.data$date_start)),                 date_end =  as.Date(sprintf(\"%d-%02d-%02d\",                                             .data$year,                                             .data$month,                                             .data$days_in_month)),                 source = kwb.utils::multiSubstitute(.data$source,                                                     replacements = list(\"Grundwasser\" = \"groundwater.mmPerDay\",                                                                         \"Klarwasser\" = \"clearwater.mmPerDay\")),                 irrigation_cbmPerDay = .data$irrigation_m3/.data$days_in_month,                 irrigation_area_sqm = irrigation_area$area,                 irrigation_mmPerDay = 1000*irrigation_cbmPerDay/irrigation_area_sqm) %>%   dplyr::select(.data$year,                 .data$month,                 .data$days_in_month,                 .data$date_start,                 .data$date_end,                 .data$source,                 .data$irrigation_mmPerDay,                 .data$irrigation_area_sqm) %>%   tidyr::pivot_wider(names_from = .data$source,                      values_from = .data$irrigation_mmPerDay) } head(flextreat.hydrus1d::irrigation) #> # A tibble: 6 × 8 #>    year month days_in_month date_start date_end   irrigation_a…¹ groun…² clear…³ #>   <int> <int>         <dbl> <date>     <date>              <dbl>   <dbl>   <dbl> #> 1  2017     1            31 2017-01-01 2017-01-31      44111068. 0         0     #> 2  2017     2            28 2017-02-01 2017-02-28      44111068. 0         0.606 #> 3  2017     3            31 2017-03-01 2017-03-31      44111068. 0         0.618 #> 4  2017     4            30 2017-04-01 2017-04-30      44111068. 0         0.613 #> 5  2017     5            31 2017-05-01 2017-05-31      44111068. 4.68e-5   0.645 #> 6  2017     6            30 2017-06-01 2017-06-30      44111068. 1.35e-3   0.911 #> # … with abbreviated variable names ¹​irrigation_area_sqm, #> #   ²​groundwater.mmPerDay, ³​clearwater.mmPerDay"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/materials.html","id":null,"dir":"Reference","previous_headings":"","what":"Materials — materials","title":"Materials — materials","text":"dataset containing hydraulic soil characteristics Hydrus1D GUI database","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/materials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Materials — materials","text":"","code":"materials"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/materials.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Materials — materials","text":"data frame 12 rows 7 variables: material_name Name soil Qr Residual soil water content Qs Saturated soil water content Alpha Parameter soil water retention function (L-1, : cm) n Parameter n soil water retention function Ks Saturated hydraulic conductivity (unit: LT-1, : cm/day) Tortuosity parameter conductivity function (-)","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/materials.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Materials — materials","text":"Hydrus1D GUI -> Soil Hydraulic Properties (Pre-Processing Menu, Water Flow Submenu)","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/materials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Materials — materials","text":"","code":"materials #> # A tibble: 12 × 7 #>    material_name      Qr    Qs Alpha     n     Ks     I #>    <chr>           <dbl> <dbl> <dbl> <dbl>  <dbl> <dbl> #>  1 sand            0.045  0.43 0.145  2.68 713.     0.5 #>  2 loamy sand      0.057  0.41 0.124  2.28 350.     0.5 #>  3 sandy loam      0.065  0.41 0.075  1.89 106.     0.5 #>  4 loam            0.078  0.43 0.036  1.56  25.0    0.5 #>  5 sillt           0.034  0.46 0.016  1.37   6      0.5 #>  6 silt loam       0.067  0.45 0.02   1.41  10.8    0.5 #>  7 sandy clay loam 0.1    0.39 0.059  1.48  31.4    0.5 #>  8 clay loam       0.095  0.41 0.019  1.31   6.24   0.5 #>  9 silty clay loam 0.089  0.43 0.01   1.23   1.68   0.5 #> 10 sandy clay      0.1    0.38 0.027  1.23   2.88   0.5 #> 11 silty clay      0.07   0.36 0.005  1.09   0.48   0.5 #> 12 clay loam       0.068  0.38 0.008  1.09   4.8    0.5"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_atmosphere.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Atmosphere — plot_atmosphere","title":"Plot Atmosphere — plot_atmosphere","text":"Plot Atmosphere","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_atmosphere.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Atmosphere — plot_atmosphere","text":"","code":"plot_atmosphere(atm_selected_hydro_long)"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_atmosphere.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Atmosphere — plot_atmosphere","text":"atm_selected_hydro_long retrieved aggregate_atmosphere \"long\" format","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_atmosphere.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Atmosphere — plot_atmosphere","text":"plot atmosphere","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_monthly_atm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Monthly Atmospheric Data — plot_monthly_atm","title":"Plot Monthly Atmospheric Data — plot_monthly_atm","text":"Plot Monthly Atmospheric Data","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_monthly_atm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Monthly Atmospheric Data — plot_monthly_atm","text":"","code":"plot_monthly_atm()"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_monthly_atm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Monthly Atmospheric Data — plot_monthly_atm","text":"plot monthly atmospheric data","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_monthly_atm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Monthly Atmospheric Data — plot_monthly_atm","text":"","code":"plot_monthly_atm()"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_solute.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Solute — plot_solute","title":"Plot Solute — plot_solute","text":"Plot Solute","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_solute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Solute — plot_solute","text":"","code":"plot_solute(solute_aggr, y_label = \"Share of 'clearwater' (%)\")"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_solute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Solute — plot_solute","text":"solute_aggr solute_aggr retrieved y_label y_label (default: \"Share 'clearwater' (%)\")","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_solute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Solute — plot_solute","text":"plot solute","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_waterbalance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Water Balance — plot_waterbalance","title":"Plot Water Balance — plot_waterbalance","text":"Plot Water Balance","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_waterbalance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Water Balance — plot_waterbalance","text":"","code":"plot_waterbalance(   tlevel_aggr,   y_label = \"Water Balance Component\",   unit_org = \"cm\",   unit_target = \"mm\" )"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_waterbalance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Water Balance — plot_waterbalance","text":"tlevel_aggr aggregated t_level retrieved aggregate_tlevel y_label default: \"Water Balance Component (mm)\" unit_org original unit \"t_level\" (default: \"cm\") unit_target target unit plot (default: \"mm\")","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/plot_waterbalance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Water Balance — plot_waterbalance","text":"plot water balance","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/precipitation_daily.html","id":null,"dir":"Reference","previous_headings":"","what":"Precipitation: Daily — precipitation_daily","title":"Precipitation: Daily — precipitation_daily","text":"Hourly precipitation data downloaded DWD monitoring station Braunschweig (id = 662) 1997-10-22 2021-12-31, aggregated daily values within R","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/precipitation_daily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precipitation: Daily — precipitation_daily","text":"","code":"precipitation_daily"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/precipitation_daily.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Precipitation: Daily — precipitation_daily","text":"data.frame 8835 rows 3 variables: year year month month days_in_month days month date_start date start date_end date end irrigation_area_sqm irrigation area squaremeter \"groundwater.mmPerDay irrigation using \"groundwater\" (mm/sqm) \"clearwater.mmPerDay irrigation using \"clearwater\" (mm/sqm)","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/precipitation_daily.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Precipitation: Daily — precipitation_daily","text":"","code":"if (FALSE) { install.packages(c(\"dplyr\", \"rdwd\")) library(dplyr) rdwd::updateRdwd() rdwd::findID(\"Braunschweig\") rdwd::selectDWD(name = \"Braunschweig\", res = \"daily\")  url_bs_rain <- rdwd::selectDWD(name = \"Braunschweig\",                               res = \"hourly\",                               var = \"precipitation\",                               per = \"historical\" )  bs_rain <- rdwd::dataDWD(url_bs_rain)  precipitation_hourly <- rdwd::dataDWD(url_bs_rain) %>%  dplyr::select(.data$MESS_DATUM, .data$R1) %>%  dplyr::rename(\"datetime\" = \"MESS_DATUM\",                \"precipitation_mm\" = \"R1\")  precipitation_daily <- precipitation_hourly %>%  dplyr::mutate(\"date\" = as.Date(datetime)) %>%  dplyr::group_by(date) %>%  dplyr::summarise(rain_mm = sum(precipitation_mm))  } head(flextreat.hydrus1d::precipitation_daily) #> # A tibble: 6 × 2 #>   date       rain_mm #>   <date>       <dbl> #> 1 1997-10-22     0   #> 2 1997-10-23     0.1 #> 3 1997-10-24     0.5 #> 4 1997-10-25     0.3 #> 5 1997-10-26     0   #> 6 1997-10-27     0"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/precipitation_hourly.html","id":null,"dir":"Reference","previous_headings":"","what":"Precipitation: Hourly — precipitation_hourly","title":"Precipitation: Hourly — precipitation_hourly","text":"Hourly precipitation data downloaded DWD monitoring station Braunschweig (id = 662) 1997-10-22 2021-12-31","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/precipitation_hourly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precipitation: Hourly — precipitation_hourly","text":"","code":"precipitation_hourly"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/precipitation_hourly.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Precipitation: Hourly — precipitation_hourly","text":"data.frame 211629 rows 2 variables: datetime date time precipitation_mm precipitation mm","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/precipitation_hourly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Precipitation: Hourly — precipitation_hourly","text":"","code":"if (FALSE) { install.packages(c(\"dplyr\", \"rdwd\")) library(dplyr) rdwd::updateRdwd() rdwd::findID(\"Braunschweig\") rdwd::selectDWD(name = \"Braunschweig\", res = \"daily\")  url_bs_rain <- rdwd::selectDWD(name = \"Braunschweig\",                               res = \"hourly\",                               var = \"precipitation\",                               per = \"historical\" )  bs_rain <- rdwd::dataDWD(url_bs_rain)  precipitation_hourly <- rdwd::dataDWD(url_bs_rain) %>%  dplyr::select(.data$MESS_DATUM, .data$R1) %>%  dplyr::rename(\"datetime\" = \"MESS_DATUM\",                \"precipitation_mm\" = \"R1\")  } head(flextreat.hydrus1d::precipitation_hourly) #>              datetime precipitation_mm #> 1 1997-10-22 14:00:00                0 #> 2 1997-10-22 17:00:00                0 #> 3 1997-10-22 18:00:00                0 #> 4 1997-10-22 19:00:00                0 #> 5 1997-10-22 20:00:00                0 #> 6 1997-10-22 21:00:00                0"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/prepare_atmosphere.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Atmosphere — prepare_atmosphere","title":"Prepare Atmosphere — prepare_atmosphere","text":"Prepares atmospheric input data structure required HYDRUS1D default uses conservative tracer irrigation source \"clearwater\" ( set 1) order track share cleaned wastewater system inflow rate (\"Prec\" column combined value irrigation using either \"groundwater\" \"clearwater\" real \"rainfall\").","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/prepare_atmosphere.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Atmosphere — prepare_atmosphere","text":"","code":"prepare_atmosphere(   atm,   conc_irrig_clearwater = 100,   conc_irrig_groundwater = 0,   conc_rain = 0,   defaults = kwb.hydrus1d::defaults_atmosphere() )"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/prepare_atmosphere.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Atmosphere — prepare_atmosphere","text":"atm atm retrieved prepare_atmosphere_data conc_irrig_clearwater substance concentration source \"clearwater\" used irrigation (default: 100, set source concentrations default 0 order calculate share \"clearwater\" infiltration groundwater) conc_irrig_groundwater substance concentration source \"groundwater\" used irrigation (default: 0) conc_rain substance concentration rainfall (default: 0) defaults defaults undefined parameterskwb.hydrus1d::defaults_atmosphere()","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/prepare_atmosphere.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Atmosphere — prepare_atmosphere","text":"tibble peoered","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/prepare_atmosphere.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Atmosphere — prepare_atmosphere","text":"","code":"atm <- prepare_atmosphere_data() atm_selected <- select_hydrologic_years(atm) prepare_atmosphere(atm_selected) #> # A tibble: 1,280 × 14 #>     tAtm   Prec rSoil rRoot hCritA    rB    hB    ht  tTop  tBot  Ampl  cTop #>    <int>  <dbl> <dbl> <int>  <int> <int> <int> <int> <int> <int> <int> <dbl> #>  1     1 0.0645 0.310     0 100000     0     0     0     0     0     0 100.  #>  2     2 0.615  0.155     0 100000     0     0     0     0     0     0  10.5 #>  3     3 0.0645 0.240     0 100000     0     0     0     0     0     0 100.  #>  4     4 0.245  0.12      0 100000     0     0     0     0     0     0  26.4 #>  5     5 0.0745 0.08      0 100000     0     0     0     0     0     0  86.6 #>  6     6 0.0645 0.19      0 100000     0     0     0     0     0     0 100.  #>  7     7 0.0645 0.284     0 100000     0     0     0     0     0     0 100.  #>  8     8 0.105  0.148     0 100000     0     0     0     0     0     0  61.7 #>  9     9 0.0645 0.24      0 100000     0     0     0     0     0     0 100.  #> 10    10 0.0645 0.24      0 100000     0     0     0     0     0     0 100.  #> # … with 1,270 more rows, and 2 more variables: cBot <int>, RootDepth <int>"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/prepare_atmosphere_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Atmospheric Data — prepare_atmosphere_data","title":"Prepare Atmospheric Data — prepare_atmosphere_data","text":"Prepare Atmospheric Data","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/prepare_atmosphere_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Atmospheric Data — prepare_atmosphere_data","text":"","code":"prepare_atmosphere_data()"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/prepare_atmosphere_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Atmospheric Data — prepare_atmosphere_data","text":"data frame atmospheric data Braunschweig","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/prepare_atmosphere_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Atmospheric Data — prepare_atmosphere_data","text":"","code":"atm <- prepare_atmosphere_data() atm #> # A tibble: 1,461 × 6 #>    date       irrigation_area_sqm groundwater.mmPerDay clearwa…¹ rain_mm evapo…² #>    <date>                   <dbl>                <dbl>     <dbl>   <dbl>   <dbl> #>  1 2017-01-01           44111068.                    0         0     0       0.2 #>  2 2017-01-02           44111068.                    0         0     1.8     0.2 #>  3 2017-01-03           44111068.                    0         0     3.5     0.5 #>  4 2017-01-04           44111068.                    0         0     9.2     1.1 #>  5 2017-01-05           44111068.                    0         0     0       0   #>  6 2017-01-06           44111068.                    0         0     0       0   #>  7 2017-01-07           44111068.                    0         0     0.7     0   #>  8 2017-01-08           44111068.                    0         0     0.6     0.1 #>  9 2017-01-09           44111068.                    0         0     0       0.2 #> 10 2017-01-10           44111068.                    0         0     0       0.3 #> # … with 1,451 more rows, and abbreviated variable names ¹​clearwater.mmPerDay, #> #   ²​evapo_p_mean_mm"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/select_hydrologic_years.html","id":null,"dir":"Reference","previous_headings":"","what":"Select hydrologic years — select_hydrologic_years","title":"Select hydrologic years — select_hydrologic_years","text":"Select hydrologic years","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/select_hydrologic_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select hydrologic years — select_hydrologic_years","text":"","code":"select_hydrologic_years(atm = prepare_atmosphere_data())"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/select_hydrologic_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select hydrologic years — select_hydrologic_years","text":"atm atm retrieved prepare_atmosphere_data","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/select_hydrologic_years.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select hydrologic years — select_hydrologic_years","text":"select hydrologic years","code":""},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/reference/select_hydrologic_years.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select hydrologic years — select_hydrologic_years","text":"","code":"atm <- prepare_atmosphere_data() atm_selected <- select_hydrologic_years(atm) head(atm_selected) #> # A tibble: 6 × 6 #>   date       irrigation_area_sqm groundwater.mmPerDay clearwat…¹ rain_mm evapo…² #>   <date>                   <dbl>                <dbl>      <dbl>   <dbl>   <dbl> #> 1 2017-05-01           44111068.            0.0000468      0.645     0      3.10 #> 2 2017-05-02           44111068.            0.0000468      0.645     5.5    1.55 #> 3 2017-05-03           44111068.            0.0000468      0.645     0      2.40 #> 4 2017-05-04           44111068.            0.0000468      0.645     1.8    1.2  #> 5 2017-05-05           44111068.            0.0000468      0.645     0.1    0.8  #> 6 2017-05-06           44111068.            0.0000468      0.645     0      1.9  #> # … with abbreviated variable names ¹​clearwater.mmPerDay, ²​evapo_p_mean_mm tail(atm_selected) #> # A tibble: 6 × 6 #>   date       irrigation_area_sqm groundwater.mmPerDay clearwat…¹ rain_mm evapo…² #>   <date>                   <dbl>                <dbl>      <dbl>   <dbl>   <dbl> #> 1 2020-10-26           44111068.                    0      0.649     4.7    0.5  #> 2 2020-10-27           44111068.                    0      0.649     0      0.8  #> 3 2020-10-28           44111068.                    0      0.649     0      1.02 #> 4 2020-10-29           44111068.                    0      0.649     1.5    1.2  #> 5 2020-10-30           44111068.                    0      0.649     8.8    0.8  #> 6 2020-10-31           44111068.                    0      0.649     0.2    0.6  #> # … with abbreviated variable names ¹​clearwater.mmPerDay, ²​evapo_p_mean_mm"},{"path":"https://kwb-r.github.io/flextreat.hydrus1d/news/index.html","id":"flextreathydrus1d-0009000","dir":"Changelog","previous_headings":"","what":"flextreat.hydrus1d 0.0.0.9000","title":"flextreat.hydrus1d 0.0.0.9000","text":"Added NEWS.md file track changes package. see https://style.tidyverse.org/news.html writing good NEWS.md","code":""}]
